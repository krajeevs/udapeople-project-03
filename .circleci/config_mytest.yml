version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here   
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            exit 1

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      # Add parameter here     
    steps:
      - run:
          name: Revert migrations
          # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            SUCCESS = 1
            if(( $SUCCESS==1 )); 
            then
            #  cd ~/project/backend
            #  npm install
            #  Add revert code here. You can find this in the Getting Started section.
              exit 1
            fi
            
jobs:

  test:
    docker:
      # Docker image here that supports AWS CLI
      #- image: circleci/node:13.8.0
      - image: python:3.7-alpine3.11
      
    steps:
      # Checkout code from git
      - run:
          name: Install dependencies
          command: |
            # your code here
            echo "Hello"
            #sudo apt-get -y update
            #sudo apt-get install python3-pip
            #sudo apt-get install awscli
            pip install awscli
            #sudo apt-get -y -qq update
            #sudo apt-get -y -qq install python3
            #sudo apt-get -qq install awscli
            
            #exit 1
      - run:
          name: Get backend url
          command: |
            # your code here
            aws s3 rb s3://udapeople-d089d82 --force
            aws cloudformation delete-stack --stack-name "udapeople-krajeevs-p03-front-end-d089d82"
            aws cloudformation delete-stack --stack-name "udapeople-krajeevs-p03-back-end-d089d82"
            
      - run:
          name: Deploy frontend objects
          command: |
            # your code here
      # Here's where you will add some code to rollback on failure      
                    

  test2:
    docker:
      # Docker image here that supports AWS CLI
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - run:
          name: Install dependencies
          command: |
            # your code here
            echo "Hello"
           
      - run:
          name: Get backend url
          command: |
            # your code here
            echo $SHELL
            uname -a
            pwd
            echo "ABC" > tmp.txt
            cat tmp.txt
 
            API_URL=`cat tmp.txt`
            #export API_URL="http://${BACKEND_IP}:3030"
            export API_URL="http://"`cat tmp.txt`":3030"
            echo "${API_URL}"
      - run:
          name: Deploy frontend objects
          command: |
            # your code here
      # Here's where you will add some code to rollback on failure      
                       

workflows:
  default:
    jobs:
      - test

      
